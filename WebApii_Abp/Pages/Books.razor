

@page "/books"

@using WebApii_Abp.Books
@using WebApii_Abp.Books
@using WebApii_Abp.Localization
@using WebApii_Abp.Shared
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@using Microsoft.AspNetCore.Components.Web
@using Blazorise
@using Blazorise.Components
@using Blazorise.DataGrid
@using Volo.Abp.BlazoriseUI
@using Volo.Abp.BlazoriseUI.Components
@using Volo.Abp.ObjectMapping
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout

@using WebApii_Abp.Permissions
@using Volo.Abp.AspNetCore.Components.Web
@using Volo.Abp.AspNetCore.Components
@using Microsoft.AspNetCore.Components
@using Volo.Abp.Http.Client
@inherits WebApii_AbpComponentBase
@inject IBooksAppService BooksAppService

@inject IUiMessageService UiMessageService
@inject AbpBlazorMessageLocalizerHelper<WebApii_AbpResource> LH
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@inject NavigationManager NavigationManager

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["Books"]" BreadcrumbItems="BreadcrumbItems" Toolbar="Toolbar">

</PageHeader>

<style>
    tr.table-row-selectable:hover {
        cursor: default;
    }
</style>

@* ************************* SEARCH ************************* *@
<Card>
    <CardBody>
@*//<suite-custom-code-block-1>*@
@*//</suite-custom-code-block-1>*@
        <Row>
            <div class="col col-md-8 col-lg-10">
                <div class="mb-3">
                    <Form id="BookSearchForm">
                        <Addons>
                            <Addon AddonType="AddonType.Body">
                                <TextEdit @bind-Text="@Filter.FilterText"
                                        Autofocus="true"
                                        Placeholder="@L["Search"]">
                                </TextEdit>
                            </Addon>
                            <Addon AddonType="AddonType.End">
                                <SubmitButton Form="BookSearchForm" Clicked="GetBooksAsync">
                                    <Icon Name="IconName.Search" Class="me-1"></Icon>@L["Search"]
                                </SubmitButton>
                            </Addon>
                        </Addons>
                    </Form>
                </div>
            </div>
                
                   <div class="col-md-4 col-lg-2">
            <div class="mb-3">
               <Button Color="Color.Primary" Outline Style="width:100%" id="AdvancedFilterSectionToggler"
                         Clicked="@(() => ShowAdvancedFilters = !ShowAdvancedFilters)">@L["Filters"]
                         <i aria-hidden="true" class="fa ms-1 @(!ShowAdvancedFilters ? "fa-angle-down" : "fa-angle-up")"></i>
               </Button>
            </div>
       </div>
        
        <div style="display: @(!ShowAdvancedFilters ? "none" : "block")"  class="mt-3">
            <Row>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MinBookId"]</FieldLabel>
                        <NumericEdit TValue="int?" 
             Value="@Filter.BookIdMin"
             ValueChanged="@OnBookIdMinChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MaxBookId"]</FieldLabel>
                        <NumericEdit TValue="int?" 
             Value="@Filter.BookIdMax"
             ValueChanged="@OnBookIdMaxChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["BookName"]</FieldLabel>
                        <TextEdit Text="@Filter.BookName" TextChanged="@OnBookNameChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MinPrice"]</FieldLabel>
                        <NumericEdit TValue="double?" 
             Value="@Filter.PriceMin"
             ValueChanged="@OnPriceMinChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MaxPrice"]</FieldLabel>
                        <NumericEdit TValue="double?" 
             Value="@Filter.PriceMax"
             ValueChanged="@OnPriceMaxChangedAsync" />                       
                    </Field>
                </Column>
            </Row>
@*//<suite-custom-code-block-2>*@
@*//</suite-custom-code-block-2>*@
        </div>

        </Row>

@*//<suite-custom-code-block-3>*@
@*//</suite-custom-code-block-3>*@
    </CardBody>
</Card>

@* ************************* DATA GRID ************************* *@
<Card>
    <CardBody>        

        <Div  Visibility="@(SelectedBooks.Any() ? Visibility.Visible : Visibility.Invisible)"
              class="d-flex justify-content-between align-items-center mb-2">
              
              <p class="lead mb-0">
                @if (AllBooksSelected)
                {
                    @L["AllItemsAreSelected", TotalCount]
                }
                else
                {
                    @if (SelectedBooks.Count > 1)
                    {
                        @L["NumberOfItemsOnThisPageAreSelected", SelectedBooks.Count]
                    }
                    else
                    {
                        @L["OneItemOnThisPageIsSelected"]
                    }
                }
              </p>
                
            <div>
                @if ((SelectedBooks.Count == PageSize || SelectedBooks.Count == BookList.Count) && TotalCount > SelectedBooks.Count)
                {
                    if (!AllBooksSelected)
                    {
                        <Button Clicked="SelectAllItems" Class="mx-1 btn-outline-secondary">@L["SelectAllItems", TotalCount]</Button>
                    }
                    else
                    {
                        <Button Clicked="ClearSelection" Class="mx-1 btn-outline-secondary">@L["ClearSelection"]</Button>
                    }
                }
                
                <Button Color="Color.Danger" Class="mx-1" Size="Size.Medium" Clicked="DeleteSelectedBooksAsync">
                    <Icon Name="@IconName.Delete" /> @L["Delete"]
                </Button>
            </div>
        </Div>
        
        <hr Visibility="@(SelectedBooks.Any() ? Visibility.Visible : Visibility.Invisible)"
            class="my-1 mx-0" />
        
        <DataGrid TItem="BookDto"
                  @ref="DataGridRef"
                  Data="BookList"
                  
                  SelectionMode="DataGridSelectionMode.Multiple"
                  SelectedRows="SelectedBooks"
                  RowSelectable="RowSelectableHandler"
                  SelectedRowsChanged="SelectedBookRowsChanged"
                  
                  
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  Responsive="true"
                  PageSize="PageSize"
                  Class="datagrid-detail">
            <LoadingTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                       <RadarSpinner />
                    </Column>
                </Row>
            </LoadingTemplate>
            <EmptyTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                        <Heading Size="HeadingSize.Is4" TextAlignment="TextAlignment.Center">@L["NoDataAvailable"]</Heading>
                    </Column>
                </Row>
            </EmptyTemplate>   
            <DataGridColumns>
                
                @if (CanDeleteBook && BookList.Any())
                {
                    <DataGridMultiSelectColumn TItem="BookDto" DisplayOrder="-1" Width="30px"></DataGridMultiSelectColumn>
                }
                
                <DataGridEntityActionsColumn TItem="BookDto" @ref="@EntityActionsColumn">
                    <DisplayTemplate>
                        <EntityActions TItem="BookDto" EntityActionsColumn="@EntityActionsColumn">
                            <EntityAction TItem="BookDto"
                                          Visible="@CanEditBook"
                                          Clicked="async () => await OpenEditBookModalAsync(context)"
                                          Text="@L["Edit"]"></EntityAction>
                            <EntityAction TItem="BookDto"
                                          Visible="@CanDeleteBook"
                                          Clicked="() => DeleteBookAsync(context)"
                                          ConfirmationMessage="@(()=> L["DeleteConfirmationMessage"])"
                                          Text="@L["Delete"]"></EntityAction>
@*//<suite-custom-code-block-4>*@
@*//</suite-custom-code-block-4>*@
                        </EntityActions>
                    </DisplayTemplate>
                </DataGridEntityActionsColumn>
               
              <DataGridColumn TItem="BookDto"
                      Field="BookId"
                      Caption="@L["BookId"]">
              </DataGridColumn>

              <DataGridColumn TItem="BookDto"
                      Field="BookName"
                      Caption="@L["BookName"]">
              </DataGridColumn>

              <DataGridColumn TItem="BookDto"
                      Field="Price"
                      Caption="@L["Price"]">
              </DataGridColumn>

            </DataGridColumns>
            
            
        </DataGrid>
    </CardBody>
</Card>

@* ************************* CREATE MODAL ************************* *@
<Modal @ref="CreateBookModal" Closing="@CreateBookModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">
@*//<suite-custom-code-block-5>*@
@*//</suite-custom-code-block-5>*@
        <Form id="CreateBookForm">
            <ModalHeader>
                <ModalTitle>@L["NewBook"]</ModalTitle>
                <CloseButton Clicked="CloseCreateBookModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@NewBookValidations"
                            Mode="ValidationMode.Auto"
                            Model="@NewBook"
                            ValidateOnLoad="false">
                    
                    
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["BookId"]</FieldLabel>
                            <NumericPicker TValue="int" @bind-Value="@NewBook.BookId"  Decimals="0" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["BookName"]</FieldLabel>
                            <TextEdit @bind-Text="@NewBook.BookName"  >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Price"]</FieldLabel>
                            <NumericPicker TValue="double" @bind-Value="@NewBook.Price"   >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    
                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateBookModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="CreateBookForm" Clicked="CreateBookAsync"/>
@*//<suite-custom-code-block-6>*@
@*//</suite-custom-code-block-6>*@
            </ModalFooter>
        </Form>
@*//<suite-custom-code-block-7>*@
@*//</suite-custom-code-block-7>*@
    </ModalContent>
</Modal>

@* ************************* EDIT MODAL ************************* *@
<Modal @ref="EditBookModal" Closing="@EditBookModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">
@*//<suite-custom-code-block-8>*@
@*//</suite-custom-code-block-8>*@
        <Form id="EditBookForm">
            <ModalHeader>
                <ModalTitle>@L["Update"]</ModalTitle>
                <CloseButton Clicked="CloseEditBookModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditingBookValidations"
                            Mode="ValidationMode.Auto"
                            Model="@EditingBook"
                            ValidateOnLoad="false">
                    
                    
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["BookId"]</FieldLabel>
                            <NumericPicker TValue="int" @bind-Value="@EditingBook.BookId"  Decimals="0" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["BookName"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingBook.BookName"  >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Price"]</FieldLabel>
                            <NumericPicker TValue="double" @bind-Value="@EditingBook.Price"   >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    
                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditBookModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="EditBookForm" Clicked="UpdateBookAsync" />
@*//<suite-custom-code-block-9>*@
@*//</suite-custom-code-block-9>*@
            </ModalFooter>
        </Form>
@*//<suite-custom-code-block-10>*@
@*//</suite-custom-code-block-10>*@
    </ModalContent>
</Modal>

